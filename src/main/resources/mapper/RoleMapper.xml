<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.core.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.hotel.core.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_description" jdbcType="VARCHAR" property="roleDescription" />
    <result column="role_sort" jdbcType="INTEGER" property="roleSort" />
    <result column="role_states" jdbcType="INTEGER" property="roleStates" />
    <result column="test1" jdbcType="VARCHAR" property="test1" />
    <result column="test2" jdbcType="VARCHAR" property="test2" />
    <result column="test3" jdbcType="VARCHAR" property="test3" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, role_description, role_sort, role_states, test1, test2, test3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.core.entity.Role">
    insert into role (id, role_name, role_description, 
      role_sort, role_states, test1, 
      test2, test3)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDescription,jdbcType=VARCHAR}, 
      #{roleSort,jdbcType=INTEGER}, #{roleStates,jdbcType=INTEGER}, #{test1,jdbcType=VARCHAR}, 
      #{test2,jdbcType=VARCHAR}, #{test3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.core.entity.Role" useGeneratedKeys="true" keyProperty="id">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDescription != null">
        role_description,
      </if>
      <if test="roleSort != null">
        role_sort,
      </if>
      <if test="roleStates != null">
        role_states,
      </if>
      <if test="test1 != null">
        test1,
      </if>
      <if test="test2 != null">
        test2,
      </if>
      <if test="test3 != null">
        test3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null">
        #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="roleStates != null">
        #{roleStates,jdbcType=INTEGER},
      </if>
      <if test="test1 != null">
        #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        #{test3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.core.entity.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescription != null">
        role_description = #{roleDescription,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null">
        role_sort = #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="roleStates != null">
        role_states = #{roleStates,jdbcType=INTEGER},
      </if>
      <if test="test1 != null">
        test1 = #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        test2 = #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        test3 = #{test3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.core.entity.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_description = #{roleDescription,jdbcType=VARCHAR},
      role_sort = #{roleSort,jdbcType=INTEGER},
      role_states = #{roleStates,jdbcType=INTEGER},
      test1 = #{test1,jdbcType=VARCHAR},
      test2 = #{test2,jdbcType=VARCHAR},
      test3 = #{test3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRoleListByLimit" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM role
    <where>
      <if test="roleStates != null and roleStates != ''">
        role_states = #{roleStates,jdbcType=INTEGER}
      </if>
    </where>
    LIMIT #{pages,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="selectCounts" resultType="int" parameterType="java.lang.Integer">
    SELECT count(*)
    FROM role
    <where>
      <if test="roleStates != null and roleStates != ''">
        role_states = #{roleStates,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <update id="updateRoleByStates" parameterType="com.hotel.core.entity.Role">
    UPDATE role
    <set>
      <if test="roleStates != null and roleStates != ''">
        role_states = #{roleStates,jdbcType=INTEGER}
      </if>
    </set>
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  <select id="searchRole" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM role
    <where>
      <if test="roleName != null and roleName != ''">
        AND role_name LIKE "%"#{roleName,jdbcType=VARCHAR}"%"
      </if>
      <if test="roleDescription != null and roleDescription != ''">
        AND role_description LIKE "%"#{roleDescription,jdbcType=VARCHAR}"%"
      </if>
      AND role_states = 1
    </where>
  </select>
  <update id="updateStatesBatch" parameterType="java.util.List">
    UPDATE role
    <set>
      <if test="states != null and states != ''">
        role_states = #{states,jdbcType=INTEGER}
      </if>
    </set>
    WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </update>
  <delete id="deleteBatch" parameterType="java.util.List">
    DELETE FROM role
    WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>