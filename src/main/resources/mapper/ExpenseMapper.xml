<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotel.core.mapper.ExpenseMapper">
  <resultMap id="BaseResultMap" type="com.hotel.core.entity.Expense">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="consumption_type" jdbcType="VARCHAR" property="consumptionType" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="trading_manner" jdbcType="VARCHAR" property="tradingManner" />
    <result column="transaction_amount" jdbcType="VARCHAR" property="transactionAmount" />
    <result column="consumption_date" jdbcType="TIMESTAMP" property="consumptionDate" />
    <result column="test1" jdbcType="VARCHAR" property="test1" />
    <result column="test2" jdbcType="VARCHAR" property="test2" />
    <result column="test3" jdbcType="VARCHAR" property="test3" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, username, order_number, consumption_type, product_name, quantity, trading_manner,
    transaction_amount, consumption_date, test1, test2, test3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from expense
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from expense
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hotel.core.entity.Expense" >
    insert into expense (id, user_id, username, order_number,
      consumption_type, product_name, quantity, 
      trading_manner, transaction_amount, consumption_date, 
      test1, test2, test3
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{orderNumber,jdbcType=VARCHAR},
      #{consumptionType,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER},
      #{tradingManner,jdbcType=VARCHAR}, #{transactionAmount,jdbcType=VARCHAR}, #{consumptionDate,jdbcType=TIMESTAMP}, 
      #{test1,jdbcType=VARCHAR}, #{test2,jdbcType=VARCHAR}, #{test3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hotel.core.entity.Expense" useGeneratedKeys="true" keyProperty="id">
    insert into expense
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="consumptionType != null">
        consumption_type,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="tradingManner != null">
        trading_manner,
      </if>
      <if test="transactionAmount != null">
        transaction_amount,
      </if>
      <if test="consumptionDate != null">
        consumption_date,
      </if>
      <if test="test1 != null">
        test1,
      </if>
      <if test="test2 != null">
        test2,
      </if>
      <if test="test3 != null">
        test3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="consumptionType != null">
        #{consumptionType,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="tradingManner != null">
        #{tradingManner,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null">
        #{transactionAmount,jdbcType=VARCHAR},
      </if>
      <if test="consumptionDate != null">
        #{consumptionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="test1 != null">
        #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        #{test3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hotel.core.entity.Expense">
    update expense
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="consumptionType != null">
        consumption_type = #{consumptionType,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="tradingManner != null">
        trading_manner = #{tradingManner,jdbcType=VARCHAR},
      </if>
      <if test="transactionAmount != null">
        transaction_amount = #{transactionAmount,jdbcType=VARCHAR},
      </if>
      <if test="consumptionDate != null">
        consumption_date = #{consumptionDate,jdbcType=TIMESTAMP},
      </if>
      <if test="test1 != null">
        test1 = #{test1,jdbcType=VARCHAR},
      </if>
      <if test="test2 != null">
        test2 = #{test2,jdbcType=VARCHAR},
      </if>
      <if test="test3 != null">
        test3 = #{test3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hotel.core.entity.Expense">
    update expense
    set user_id = #{userId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      consumption_type = #{consumptionType,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      trading_manner = #{tradingManner,jdbcType=VARCHAR},
      transaction_amount = #{transactionAmount,jdbcType=VARCHAR},
      consumption_date = #{consumptionDate,jdbcType=TIMESTAMP},
      test1 = #{test1,jdbcType=VARCHAR},
      test2 = #{test2,jdbcType=VARCHAR},
      test3 = #{test3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectExpenseByLimit" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    LIMIT #{pages,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="selectCounts" resultType="int" parameterType="java.lang.Integer">
    SELECT count(*)
    FROM expense
  </select>
  <select id="searchExpense" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    <where>
      <if test="username != null and username != ''">
        username LIKE "%"#{username,jdbcType=VARCHAR}"%"
      </if>
    </where>
  </select>
  <select id="selectExpenseListByConsumptionDateSortDesc" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    ORDER BY consumption_date DESC
    LIMIT #{pages,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="selectExpenseListByConsumptionDateSortAsc" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    ORDER BY consumption_date ASC
    LIMIT #{pages,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <select id="selectExpenseListByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectExpenseListByUserIdAndTime" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    WHERE user_id = #{userId,jdbcType=INTEGER} AND consumption_date BETWEEN #{start,jdbcType=DATE} AND #{end,jdbcType=DATE}
    ORDER BY consumption_date ASC
  </select>
  <select id="selectExpenseListByTime" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM expense
    WHERE consumption_date BETWEEN #{start,jdbcType=DATE} AND #{end,jdbcType=DATE}
    ORDER BY consumption_date ASC
  </select>
  <select id="selectExpenseQuantityByDay" resultType="map">
    SELECT
    DATE_FORMAT(consumption_date,'%Y-%m-%d') AS consumption_date,SUM(quantity) AS totalQuantity
    FROM expense
    WHERE product_name = #{productName,jdbcType=VARCHAR} AND consumption_date BETWEEN #{start,jdbcType=DATE} AND #{end,jdbcType=DATE}
    GROUP BY DAY(consumption_date)
    ORDER BY consumption_date ASC
  </select>
  <select id="selectExpenseQuantityByMonth" resultType="map">
    SELECT
    DATE_FORMAT(consumption_date,'%Y-%m') AS consumption_date,SUM(quantity) AS totalQuantity
    FROM expense
    WHERE product_name = #{productName,jdbcType=VARCHAR} AND consumption_date BETWEEN #{start,jdbcType=DATE} AND #{end,jdbcType=DATE}
    GROUP BY MONTH(consumption_date)
    ORDER BY consumption_date ASC
  </select>
  <select id="selectExpenseQuantityByYear" resultType="map">
    SELECT
    DATE_FORMAT(consumption_date,'%Y') AS consumption_date,SUM(quantity) AS totalQuantity
    FROM expense
    WHERE product_name = #{productName,jdbcType=VARCHAR} AND consumption_date BETWEEN #{start,jdbcType=DATE} AND #{end,jdbcType=DATE}
    GROUP BY YEAR(consumption_date)
    ORDER BY consumption_date ASC
  </select>
  <delete id="deleteBatch" parameterType="java.util.List">
    DELETE FROM expense
    WHERE id in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
</mapper>